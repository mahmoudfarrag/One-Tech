@model BL.ViewModels.RegisterViewodel

@{
    if (User.IsInRole("Admin"))
    {
        Layout = "~/Views/Shared/_DashoardLayout.cshtml";
    }
    else
    {
        Layout = "~/Views/Shared/_Layout.cshtml";
    }
    ViewBag.Title = "Edit";
    List<string> genderList = new List<string> { "Male", "Female" };

    SelectList genderSelectList = new SelectList(genderList, null, null, genderList.FirstOrDefault());
}

<div class="modal fade" id="modalUpdatePassword" role="dialog">
    <div class="modal-dialog" style="width:400px">
        <div class="modal-content">
            <div class="modal-header justify-content-center">
                <div class="h4 text-center text-dark">Password Update</div>
            </div>
            <div class="modal-body">
            
                <div class="form-group input-group">
                    <div class="input-group-prepend">
                        <span class="input-group-text pr-3"> <i class="fa fa-lock"></i> </span>
                    </div>
                    <input id="password" class="form-control" placeholder="Password" type="password">
                </div>
                <div class="form-group input-group">
                    <div class="input-group-prepend">
                        <span class="input-group-text pr-3"> <i class="fa fa-lock"></i> </span>
                    </div>
                    <input id="repeat-password" class="form-control" placeholder="Repeat password" type="password">
                </div>
                <div class="form-group">
                    <button type="submit" class="btn btn-primary btn-block" id="modalUpdateBtn"> Update </button>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>


<h2 class="text-center" style="margin-top:70px">Edit Account</h2>
<div class="container">
    <div class="col-9 offset-2 formContainer">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">


                @Html.HiddenFor(model => model.Id)
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                <div class="form-group row">
                    @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-3 mt-2" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control " } })
                        @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                    </div>
                </div>

                @*<div class="form-group row">*@
                    @*@Html.LabelFor(model => model.PasswordHash, htmlAttributes: new { @class = "control-label col-md-3 mt-2" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.PasswordHash, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PasswordHash, "", new { @class = "text-danger" })
                    </div>*@
                    @*@Html.HiddenFor(model=>model.PasswordHash,)*@
                    <input type="hidden" name="PasswordHash" id="PasswordHash" value="555555" />
                @*</div>

                <div class="form-group row">*@
                    <input type="hidden" name="ConfirmPassword" id="ConfirmPassword" value="555555" />
                    @*@Html.HiddenFor(model => model.ConfirmPassword)*@
                    @*@Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-3 mt-2" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                    </div>*@
                @*</div>*@

                <div class="form-group row">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-3 mt-2" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-3 mt-2" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-3 mt-2" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.BirthDate, htmlAttributes: new { @class = "control-label col-md-3 mt-2" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { Value = Model.BirthDate.ToString("yyyy-MM-dd"), @class = "form-control date-picker" } })
                        @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-3 mt-2" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-3 mt-2" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-3 mt-2" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-3 mt-2" })
                    <div class="col-md-9">
                        @Html.DropDownListFor(model => model.Gender, genderSelectList, htmlAttributes: new { @class = "form-control gender" })
                        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    <div class="col-12">
                        <input type="submit" value="Save" class="btn btn-success form-control" />
                    </div>
                </div>
            </div>
        }
        <button class="btn btn-primary form-control" id="updatePasswordBtn" data-userID="@Model.Id">Update Password</button>
    </div>
  
</div>



@section Styles
{
    <style type="text/css">

        .gender {
            padding: 10px 20px !important;
        
            margin-bottom: 25px !important;
          
            height: 40px !important;
        }
        .formContainer {
          

        
            background-color: #f2f2f2;
          
           
            padding: 50px;
            border-top-left-radius: 30px;
            border-top-right-radius: 30px;
            box-shadow: rgba(0, 0, 0, 0.4) 0px 30px 90px;
        
        }
     
     
    </style>
}
@section scripts{
    @Scripts.Render("~/bundles/jqueryval")
<script>
           $(document).ready(function () {

        

               $("#updatePasswordBtn").click(function () {
                   $("#modalUpdatePassword #modalUpdateBtn").data("userID", $(this).attr("data-userID"));
                   $("#modalUpdatePassword").modal("show");

              })
               $("#modalUpdatePassword").on("click", "#modalUpdateBtn", function () {
                   // alert("ok")
                   //repeat-password
                   var password = $("#modalUpdatePassword #password").val();
                   var repeatPassword = $("#modalUpdatePassword #repeat-password").val();

                   var id = $(this).data("userID");
                   //alert(password);
                   //alert(repeatPassword);
                   //alert(id);
                   if (password.length < 6) {
                       alert("Password must be at least 6 ")
                       return;
                   }
                   if (password !== repeatPassword) {
                       alert("Password not match confirm");
                       return;
                   }
                    $.ajax({
                       url: '@Url.Action("UpdatePassword")',
                       type: 'GET',
                        data: { userID: id, newPassword:password },
                       success: function (resoinse) {
                           $("#addtobagmodal").modal("hide");
                           location.reload(true);
                       }

                   });

        
                  
                
               });

       



          });

</script>
}