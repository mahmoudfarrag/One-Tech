@model BL.ViewModels.RegisterViewodel

@{ 
    if (User.IsInRole("Admin"))
    {
        Layout = "~/Views/Shared/_DashoardLayout.cshtml";
    }
    else
    {
        Layout = "~/Views/Shared/_Layout.cshtml";
    }
    ViewBag.Title = "Register";
    List<string> genderList= new List<string> { "Male","Female"};

    SelectList  genderSelectList= new SelectList(genderList,null,null,genderList.FirstOrDefault());
    SelectList roles = new SelectList(ViewBag.roles, null, null);

}

<div class="registration-form">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true,"", new { @class = "text-danger" })
        <div class="form-icon">
            <span><i class="fas fa-user"></i></span>
        </div>
        <div class="form-group">
            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control item", placeholder = "First Name" } })
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })

        </div>
        <div class="form-group">
            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control item", placeholder = "Lasr Name" } })
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control item", placeholder = "Email" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control item", placeholder = "UserName" } })
            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.EditorFor(model => model.PasswordHash, new { htmlAttributes = new { @class = "form-control item", placeholder = "Password" } })
            @Html.ValidationMessageFor(model => model.PasswordHash, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control item", placeholder = "Confirm Password" } })
            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control item", placeholder = "Phone Number" } })
            @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control item", placeholder = "Birth Date" } })
            @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control item", placeholder = "Country" } })
            @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control item", placeholder = "Address" } })
            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.DropDownListFor(model => model.Gender, genderSelectList, htmlAttributes: new { @class = "form-control gender" })
            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
        </div>
        if (User.IsInRole("Admin"))
        {
            <div class="form-group">
                @Html.DropDownListFor(model => model.RoleName, roles, htmlAttributes: new { @class = "form-control gender" })
                @Html.ValidationMessageFor(model => model.RoleName, "", new { @class = "text-danger" })
            </div>
        }
        else
        {

            <input type="hidden" value="RegisteredUser" name="RoleName" id="RoleName" />

        }

        <div class="form-group">
            <button type="submit" class="btn btn-block create-account">Create Account</button>
        </div>
    }
</div>
@section Styles
{
    <style type="text/css">

        .gender {
            padding: 10px 20px !important;
            border-radius: 20px !important;
            margin-bottom: 25px !important;
            width: 600px !important;
            height:40px !important;
        }
        .registration-form {
            padding: 50px 0;
         
        }

            .registration-form form {
                background-color: #f2f2f2;
                max-width: 650px;
                margin: auto;
                padding: 50px 70px;
                border-top-left-radius: 30px;
                border-top-right-radius: 30px;
                box-shadow: rgba(0, 0, 0, 0.4) 0px 30px 90px;
            }

        input, select, textarea {
            max-width: 500px;
        }

        .registration-form .form-icon {
            text-align: center;
            background-color: #5891ff;
            border-radius: 50%;
            font-size: 40px;
            color: white;
            width: 100px;
            height: 100px;
            margin: auto;
            margin-bottom: 50px;
            line-height: 100px;
        }

        .registration-form .item {
            border-radius: 20px !important;
            margin-bottom: 25px !important;
            padding: 20px 20px !important;
            width: 600px !important;
        }



        .registration-form .create-account {
            border-radius: 30px;
            padding: 10px 20px;
            font-size: 18px;
            font-weight: bold;
            background-color: #5791ff;
            border: none;
            color: white;
            margin-top: 20px;
        }

        media (max-width: 576px) {
            .registration-form form

        {
            padding: 50px 20px;
        }

        .registration-form .form-icon {
            width: 70px;
            height: 70px;
            font-size: 30px;
            line-height: 70px;
        }
        }
    </style>
}
@section scripts{
    @Scripts.Render("~/bundles/jqueryval")
}


