@model BL.ViewModels.PaymentViewModel

@{
    ViewBag.Title = "Create";


}


<div class="container">
    <hr>

    <div class="row">


        <div class="card mt-50 mb-50">
            <div class="card-title mx-auto"> Payment Information </div>

            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <span id="card-header">Saved cards:</span>

                <div class="row row-1">
                    @foreach (var item in ViewBag.payments)
                    {

                        <div class="col-2"><img class="img-fluid" src="https://img.icons8.com/color/48/000000/visa.png" /></div>
                        <div class="col-7">@item.CardNumber</div>
                        <div class="col-3 d-flex justify-content-center"> <a href="#">Remove</a><input type="radio" name="selectPayment" /> </div>
                    }

                    <button class="btn d-flex mx-auto" id="confirm"><b>Confirm</b></button>

                </div>


                <span id="card-header">Add new card:</span>
                <div class="row-1">
                    <div class="row row-2"> <span id="card-inner">Card holder name</span> </div>
                    <div class="row row-2"> @Html.EditorFor(model => model.cardOwnerName) </div>
                    @Html.ValidationMessageFor(model => model.cardOwnerName, "", new { @class = "text-danger" })
                </div>
                <div class="row-1">
                    <div class="row row-2"> <span id="card-inner">Card number</span> </div>
                    <div class="row row-2">  @Html.EditorFor(model => model.CardNumber) </div>
                    @Html.ValidationMessageFor(model => model.CardNumber, "", new { @class = "text-danger" })
                </div>
                <div class="row-1">
                    <div class="row row-2"> <span id="card-inner">Expiretion Date</span> </div>
                    <div class="row row-2">  @Html.EditorFor(model => model.ExperationDate)  </div>
                    @Html.ValidationMessageFor(model => model.ExperationDate, "", new { @class = "text-danger" })
                </div>
                <div class="row-1">
                    <div class="row row-2"> <span id="card-inner">CVV</span> </div>
                    <div class="row row-2"> @Html.EditorFor(model => model.cvc) </div>
                    @Html.ValidationMessageFor(model => model.cvc, "", new { @class = "text-danger" })
                </div>

                @*<input type="submit" value="Add card" class="subscribe btn btn-primary btn-block" />*@
                <button class="btn d-flex mx-auto"><b>Add card</b></button>
            }
        </div>
    </div>

</div>

<br>
<br>


@section Styles
{
    <style type="text/css">
        body {
            background: #ddd;
            min-height: 100vh;
            vertical-align: middle;
            display: flex;
            font-size: 2rem !important;
        }

        .card {
            margin: auto;
            width: 600px;
            padding: 3rem 3.5rem;
            box-shadow: 0 6px 20px 0 rgba(0, 0, 0, 0.19)
        }

        .mt-50 {
            margin-top: 50px
        }

        .mb-50 {
            margin-bottom: 50px
        }

        media(max-width:767px) {
            .card

        {
            width: 90%;
            padding: 1.5rem
        }

        }

        media(height:1366px) {
            .card

        {
            width: 90%;
            padding: 8vh
        }

        }

        .card-title {
            font-weight: 700;
            font-size: 2.5em
        }

        .nav {
            display: flex
        }

            .nav ul {
                list-style-type: none;
                display: flex;
                padding-inline-start: unset;
                margin-bottom: 6vh
            }

            .nav li {
                padding: 1rem
            }

                .nav li a {
                    color: black;
                    text-decoration: none
                }

        .active {
            border-bottom: 2px solid black;
            font-weight: bold
        }

        input {
            border: none;
            outline: none;
            font-size: 1rem;
            font-weight: 600;
            color: #000;
            width: 100%;
            min-width: unset;
            background-color: transparent;
            border-color: transparent;
            margin: 0
        }

        form a {
            color: grey;
            text-decoration: none;
            font-size: 1.6rem !important;
            font-weight: bold
        }

            form a:hover {
                color: grey;
                text-decoration: none
            }

        form .row {
            margin: 0;
            overflow: hidden
        }

        form .row-1 {
            border: 1px solid rgba(0, 0, 0, 0.137);
            padding: 0.5rem;
            outline: none;
            width: 100%;
            min-width: unset;
            border-radius: 5px;
            background-color: rgba(221, 228, 236, 0.301);
            border-color: rgba(221, 228, 236, 0.459);
            margin: 2vh 0;
            overflow: hidden
        }

        form .row-2 {
            border: none;
            outline: none;
            background-color: transparent;
            margin: 0;
            padding: 0 0.8rem
        }

        form .row .row-2 {
            border: none;
            outline: none;
            background-color: transparent;
            margin: 0;
            padding: 0 0.8rem
        }

        form .row .col-2,
        .col-7,
        .col-3 {
            display: flex;
            align-items: center;
            text-align: center;
            padding: 0 1vh
        }

        form .row .col-2 {
            padding-right: 0
        }

        #card-header {
            font-weight: bold;
        }

        #card-inner {
            font-size: 1.9rem;
            color: black;
            font-weight: 600;
        }

        .three .col-7 {
            padding-left: 0
        }

        .three {
            overflow: hidden;
            justify-content: space-between
        }

            .three .col-2 {
                border: 1px solid rgba(0, 0, 0, 0.137);
                padding: 0.5rem;
                outline: none;
                width: 100%;
                min-width: unset;
                border-radius: 5px;
                background-color: rgba(221, 228, 236, 0.301);
                border-color: rgba(221, 228, 236, 0.459);
                margin: 2vh 0;
                width: fit-content;
                overflow: hidden
            }

                .three .col-2 input {
                    font-size: 0.7rem;
                    margin-left: 1vh
                }

        .btn {
            width: 100%;
            background-color: rgb(65, 202, 127) !important;
            border-color: rgb(65, 202, 127) !important;
            color: white;
            justify-content: center;
            padding: 2vh 0;
            margin-top: 3vh;
            font: 400 13.3333px Arial;
            font-size: x-large !important;
            padding: 0.8rem !important;
            border-width: 2px;
            color: white !important;
        }

            .btn:focus {
                box-shadow: none;
                outline: none;
                box-shadow: none;
                color: white;
            }

        input:focus::-webkit-input-placeholder {
            color: transparent
        }

        input:focus:-moz-placeholder {
            color: transparent
        }

        input:focus::-moz-placeholder {
            color: transparent
        }

        input:focus:-ms-input-placeholder {
            color: transparent
        }
        input{
            font-size:18px !important 
        }
    </style>
}


@section scripts{

    <script>
      //  $(document).ready(function () {

        $("#confirm").click(function () {
       
                $.ajax({

                type: 'POST',
                url: '@Url.Action("test","Order")',
                traditional: true,
                    success: function () {

                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert("jqXHR:" + jqXHR.status + " errorThrown: " + errorThrown);
                }
            })



            });

         // });
    </script>
    @Scripts.Render("~/bundles/jqueryval")
}

